# pyproject.toml
[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "fantasy-novel-mcp"
version = "1.0.0"
description = "玄幻小说自动生成MCP工程"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "openai>=1.0.0",
    "pydantic>=2.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    "pyyaml>=6.0",
    "jinja2>=3.0.0",
    "sqlalchemy>=2.0.0",
    "redis>=4.0.0",
    "aiofiles>=23.0.0",
    "loguru>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/your-repo/fantasy-novel-mcp"
Documentation = "https://github.com/your-repo/fantasy-novel-mcp#readme"
Repository = "https://github.com/your-repo/fantasy-novel-mcp.git"
"Bug Tracker" = "https://github.com/your-repo/fantasy-novel-mcp/issues"

[project.scripts]
fantasy-novel = "main:main"

[tool.setuptools.packages.find]
include = ["fantasy_novel_mcp*"]
exclude = ["tests*"]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["fantasy_novel_mcp"]
skip_glob = ["*/__init__.py"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=fantasy_novel_mcp --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["fantasy_novel_mcp"]
omit = [
    "tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]


